name: CI

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x86, arm]
        include:
          - os: ubuntu-latest
            compiler: g++-10
          - os: macos-latest
            compiler: clang++
          - os: windows-latest
            compiler: msvc

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup CMake, Ninja and GCC
      uses: lukka/get-cmake@v3.21.1

    - name: Setup MSVC
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    # Check compiler versions
    - name: Check GCC Version
      if: matrix.os == 'ubuntu-latest'
      run: g++ --version

    - name: Check Clang Version
      if: matrix.os == 'macos-latest'
      run: clang++ --version

    # Check MSVC Version
    - name: Check MSVC Version
      if: matrix.os == 'windows-latest'
      run: |
        $version = cl 2>&1 | Select-String -Pattern "Version (\d+\.\d+)"
        if (-not $version -or [Version]$matches[1] -lt [Version]"19.28") {
            throw "MSVC version is less than 19.28"
        }
      shell: pwsh
    # Additional setup for different architectures can be done here

    - name: Create build directory
      run: mkdir build

    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: cmake --build build --config Release

    - name: Test
      working-directory: build
      run: ctest
